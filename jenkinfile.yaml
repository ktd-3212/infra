pipeline {
    agent any

    environment {
        AWS_REGION   = "ap-southeast-1"
        AWS_CREDS_ID = 'aws-creds' 
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/ktd-3212/infra.git'
            }
        }

        stage('Terraform Init') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding', 
                    credentialsId: AWS_CREDS_ID, 
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    withEnv(["AWS_DEFAULT_REGION=${AWS_REGION}"]) {
                        sh 'terraform init -upgrade'
                    }
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding', 
                    credentialsId: AWS_CREDS_ID, 
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    withEnv(["AWS_DEFAULT_REGION=${AWS_REGION}"]) {
                        sh '''
                        terraform plan -out=tfplan \
                                       -var="aws_region=${AWS_REGION}"
                        '''
                    }
                }
            }
            post {
                always {
                    sh 'ls -lh tfplan || true'
                }
            }
        }

        // Yêu cầu xác nhận thủ công
        stage('Approval to Apply') {
            steps {
                script {
                    // Dừng pipeline và hiển thị nút "Proceed" trong Jenkins UI
                    input message: 'Bạn có chắc muốn APPLY Terraform lên AWS không?', ok: 'Apply now'
                }
            }
        }

        // Stage Apply sau khi được xác nhận
        stage('Terraform Apply') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding', 
                    credentialsId: AWS_CREDS_ID, 
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID', 
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    withEnv(["AWS_DEFAULT_REGION=${AWS_REGION}"]) {
                        sh '''
                        terraform apply -auto-approve tfplan
                        '''
                    }
                }
            }
        }
    }
}
